/*
 * This file is generated by jOOQ.
 */
package dev.ku01.shop.db.pg_catalog.tables.records;


import dev.ku01.shop.db.pg_catalog.tables.PgPublicationNamespace;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgPublicationNamespaceRecord extends UpdatableRecordImpl<PgPublicationNamespaceRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_publication_namespace.oid</code>.
     */
    public void setOid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_publication_namespace.oid</code>.
     */
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_publication_namespace.pnpubid</code>.
     */
    public void setPnpubid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_publication_namespace.pnpubid</code>.
     */
    public Long getPnpubid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_publication_namespace.pnnspid</code>.
     */
    public void setPnnspid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_publication_namespace.pnnspid</code>.
     */
    public Long getPnnspid() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PgPublicationNamespace.PG_PUBLICATION_NAMESPACE.OID;
    }

    @Override
    public Field<Long> field2() {
        return PgPublicationNamespace.PG_PUBLICATION_NAMESPACE.PNPUBID;
    }

    @Override
    public Field<Long> field3() {
        return PgPublicationNamespace.PG_PUBLICATION_NAMESPACE.PNNSPID;
    }

    @Override
    public Long component1() {
        return getOid();
    }

    @Override
    public Long component2() {
        return getPnpubid();
    }

    @Override
    public Long component3() {
        return getPnnspid();
    }

    @Override
    public Long value1() {
        return getOid();
    }

    @Override
    public Long value2() {
        return getPnpubid();
    }

    @Override
    public Long value3() {
        return getPnnspid();
    }

    @Override
    public PgPublicationNamespaceRecord value1(Long value) {
        setOid(value);
        return this;
    }

    @Override
    public PgPublicationNamespaceRecord value2(Long value) {
        setPnpubid(value);
        return this;
    }

    @Override
    public PgPublicationNamespaceRecord value3(Long value) {
        setPnnspid(value);
        return this;
    }

    @Override
    public PgPublicationNamespaceRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgPublicationNamespaceRecord
     */
    public PgPublicationNamespaceRecord() {
        super(PgPublicationNamespace.PG_PUBLICATION_NAMESPACE);
    }

    /**
     * Create a detached, initialised PgPublicationNamespaceRecord
     */
    public PgPublicationNamespaceRecord(Long oid, Long pnpubid, Long pnnspid) {
        super(PgPublicationNamespace.PG_PUBLICATION_NAMESPACE);

        setOid(oid);
        setPnpubid(pnpubid);
        setPnnspid(pnnspid);
        resetChangedOnNotNull();
    }
}
